// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Student {
  id              Int                @id @default(autoincrement())
  firstName       String
  lastName        String
  email           String             @unique
  age             Int?
  phone           String?
  image           String?
  privateRate     Float              @default(0.00)
  groupRate       Float              @default(0.00)
  bookings        BookingStudent[]
  payments        Payment[]
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
}

model Booking {
  id        Int                @id @default(autoincrement())
  title     String
  startTime DateTime
  endTime   DateTime
  notes     String?
  students  BookingStudent[]
  payment   Payment?
  createdAt DateTime           @default(now())
  updatedAt DateTime           @updatedAt
}

model BookingStudent {
  id        Int      @id @default(autoincrement())
  bookingId Int
  booking   Booking  @relation(fields: [bookingId], references: [id], onDelete: Cascade)
  studentId Int
  student   Student  @relation(fields: [studentId], references: [id], onDelete: Cascade)
  attended  Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([bookingId, studentId])
}

model Payment {
  id        Int      @id @default(autoincrement())
  studentId Int
  student   Student  @relation(fields: [studentId], references: [id], onDelete: Cascade)
  bookingId Int?     @unique
  booking   Booking? @relation(fields: [bookingId], references: [id], onDelete: Cascade)
  amount    Float
  date      DateTime @default(now())
  notes     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
